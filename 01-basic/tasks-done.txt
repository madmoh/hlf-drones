Followed pre-requists (https://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html)
	Installed git, curl, docker, docker-compose, go, jq

Followed fabric installation (https://hyperledger-fabric.readthedocs.io/en/latest/install.html)
	Used installation script with options d b s
	Ran a sample network (./network.sh up -ca -s couchdb -verbose)
	Monitored the network using lazydocker

Followed chaincode development (https://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html)
	Wrote chaincode/cars.go

Followed chaincode deployment (https://hyperledger-fabric.readthedocs.io/en/latest/deploy_chaincode.html#package-the-smart-contract)
	Created a simple channel (./network.sh createChannel -ca -c carschannel -s couchdb -verbose)
	Instead of GO111MODULE=on... I Used go mod init github.com/madmoh/hlf-tuts
	//peer lifecycle chaincode package cars.tar.gz --path "/home/madine/Developer/hlf-tuts/01-basic/chaincode" --lang golang --label cars_1.0
	Copied entire project to ~/go/src/github.com/.../<project> then executed go mod init, go mod tidy, go mod vendor
	Downgraded project to go 1.20 using go get go@1.20
	Deployed using
		./network.sh deployCC -c carschannel -ccn cars -ccl go -ccv 1.0 -ccs 1 -ccp "/home/madine/go/src/github.com/madmoh/hlf-tuts/01-basic/chaincode/" -ccep "OutOf(2,'Org1MSP.peer','Org2MSP.peer')"
	